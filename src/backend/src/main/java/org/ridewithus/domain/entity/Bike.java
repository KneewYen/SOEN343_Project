package org.ridewithus.domain.entity;

import jakarta.persistence.*;

@Entity
@Table(name = "bikes")
public class Bike {
    @Id //primary key 
    @GeneratedValue(strategy = GenerationType.IDENTITY) //value is generated by Database, not through constructors
    private Long id;



    public enum BikeStatus{
        AVAILABLE,
        RESERVED,
        ON_TRIP,
        MAINTENANCE
    }

    @Enumerated(EnumType.STRING)
    private BikeStatus status;
    private String type ;

    @ManyToOne
    @JoinColumn(name = "dock_id", unique = true) //unique makes it so it has acts as One-to-one relationship, more flexible for later on
    private Dock dock;

    public Bike() {
    }

    public Bike(BikeStatus status, String type, Dock dock) {
        this.status = status;
        this.type = type;
        this.dock = dock;
    }

    // Getters 
    public Long getId(){ 
        return id; 
    }
    public BikeStatus getStatus(){
        return status; 
    }
    

    public String getType(){ 
        return type; 
    }
    public Dock getDock(){ 
        return dock; 
    }
   
    // Setters
    public void setId(Long id){ 
        this.id = id; 
    }
    public void setStatus(BikeStatus status){
        this.status = status; 
    }
    public void setType(String type){ 
        this.type = type; 
    }
    public void setDock(Dock dock){ 
        this.dock = dock; 
    }

    public boolean isReserved(){
        return status == BikeStatus.RESERVED;
    }

    public boolean isOnTrip(){
        return status == BikeStatus.ON_TRIP;
    }
}
